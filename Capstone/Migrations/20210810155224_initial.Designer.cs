// <auto-generated />
using System;
using Capstone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capstone.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210810155224_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AvailabilityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("DayId");

                    b.ToTable("AvailabilityLineItems");
                });

            modelBuilder.Entity("Capstone.Models.DayLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("Date");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("End")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.ToTable("DayLineItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed405119-0d1a-4442-aef3-60a51a5ec5b4"),
                            Day = 0,
                            End = new TimeSpan(0, 18, 0, 0, 0),
                            Start = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("30e3944e-803b-4ce6-aee6-dd0cb60dc479"),
                            Day = 1,
                            End = new TimeSpan(0, 22, 0, 0, 0),
                            Start = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("ada842b0-757d-4118-a84a-c6d296f4d10d"),
                            Day = 2,
                            End = new TimeSpan(0, 22, 0, 0, 0),
                            Start = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("38e83d67-e75f-48d1-91e0-93f8c877480f"),
                            Day = 3,
                            End = new TimeSpan(0, 22, 0, 0, 0),
                            Start = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("3cbff644-7d0a-49aa-9431-e69a18963449"),
                            Day = 4,
                            End = new TimeSpan(0, 22, 0, 0, 0),
                            Start = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("b8655ac8-dc4f-4da2-b192-0b5fd473d4f4"),
                            Day = 5,
                            End = new TimeSpan(0, 22, 0, 0, 0),
                            Start = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Id = new Guid("b3302c3b-f1df-4097-a1ca-fb3e67e0e972"),
                            Day = 6,
                            End = new TimeSpan(0, 16, 0, 0, 0),
                            Start = new TimeSpan(0, 9, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("Capstone.Models.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14481991-6bf5-4165-bfbd-2f417fcf1bd0"),
                            Name = "Stock"
                        },
                        new
                        {
                            Id = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            Name = "Sales"
                        },
                        new
                        {
                            Id = new Guid("40855ddf-fe2c-44b0-99d4-2f35bf22129e"),
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = new Guid("842372b9-ba3e-4cbc-b37d-0b66299b4b65"),
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxWeeklyHours")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Pay")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6da534d-6fff-40d7-b4ad-06936e2b74c0"),
                            Address = "8889 Milwaukee Way",
                            FirstName = "Brynna",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Celloni",
                            MaxWeeklyHours = 40,
                            Pay = 14.05m,
                            Phone = "7981594155",
                            Postal = "G6B",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("5df1e195-ff42-4835-bb2b-8db7001fd240"),
                            Address = "8262 Coleman Alley",
                            FirstName = "Cobb",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Dudden",
                            MaxWeeklyHours = 12,
                            Pay = 18.88m,
                            Phone = "4312540837",
                            Postal = "J3Y",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("2ebbd7e6-b2ab-4849-b7a2-64c07655b5ef"),
                            Address = "22011 Mosinee Parkway",
                            FirstName = "Mick",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Neiland",
                            MaxWeeklyHours = 7,
                            Pay = 19.27m,
                            Phone = "5866251552",
                            Postal = "T9H",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("3066f2f7-7820-47f1-aeee-1e5f3b3ca36a"),
                            Address = "71524 Reindahl Drive",
                            FirstName = "Renaud",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Trott",
                            MaxWeeklyHours = 16,
                            Pay = 16.65m,
                            Phone = "4111346039",
                            Postal = "J8Y",
                            Province = "Ontario",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("f1523ace-e1b9-4a01-b0fe-730f66253b1b"),
                            Address = "9 Dahle Circle",
                            FirstName = "Sophie",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Heller",
                            MaxWeeklyHours = 9,
                            Pay = 14.29m,
                            Phone = "9497542437",
                            Postal = "T5G",
                            Province = "Manitoba",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("6ce8898b-2e65-4ed1-a37e-abb6982d962f"),
                            Address = "146 Burrows Trail",
                            FirstName = "Dael",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Haruard",
                            MaxWeeklyHours = 32,
                            Pay = 16.98m,
                            Phone = "3214306584",
                            Postal = "J0R",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("56043142-2aa5-45af-b287-e0192aecfbca"),
                            Address = "1579 Nancy Crossing",
                            FirstName = "Engelbert",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Everal",
                            MaxWeeklyHours = 40,
                            Pay = 15.34m,
                            Phone = "5371747772",
                            Postal = "J7J",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("d4b7ced3-d300-4643-928f-800b553ff8c7"),
                            Address = "70226 Evergreen Center",
                            FirstName = "Bradley",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "MacFie",
                            MaxWeeklyHours = 40,
                            Pay = 19.53m,
                            Phone = "7252174592",
                            Postal = "L6E",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("264463f3-8bd6-4ccb-a4ad-ddaf805aea51"),
                            Address = "872 Roxbury Lane",
                            FirstName = "Aron",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Brayn",
                            MaxWeeklyHours = 32,
                            Pay = 17.55m,
                            Phone = "3576946796",
                            Postal = "L4P",
                            Province = "Ontario",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("12c8a4c9-985c-4a42-8be8-e909fb704dae"),
                            Address = "7944 Golf View Lane",
                            FirstName = "Brion",
                            JobTitleId = new Guid("f25d2bef-c095-432b-adc1-9943bf503834"),
                            LastName = "Quig",
                            MaxWeeklyHours = 31,
                            Pay = 14.87m,
                            Phone = "1361511879",
                            Postal = "N3E",
                            Province = "Manitoba",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("ae8b1130-6082-41cb-bcfb-6ecc740d8ee4"),
                            Address = "86479 Harbort Center",
                            FirstName = "Christel",
                            JobTitleId = new Guid("14481991-6bf5-4165-bfbd-2f417fcf1bd0"),
                            LastName = "Jobbing",
                            MaxWeeklyHours = 40,
                            Pay = 16.96m,
                            Phone = "7512327796",
                            Postal = "L2V",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("856b51bb-7df7-4169-a237-fcd5b87526df"),
                            Address = "04662 Porter Lane",
                            FirstName = "Kai",
                            JobTitleId = new Guid("14481991-6bf5-4165-bfbd-2f417fcf1bd0"),
                            LastName = "Michelin",
                            MaxWeeklyHours = 40,
                            Pay = 14.58m,
                            Phone = "7086531921",
                            Postal = "L9Y",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("72dc9db9-36d7-437c-a976-99fa0507e825"),
                            Address = "461 Mccormick Place",
                            FirstName = "Rubin",
                            JobTitleId = new Guid("14481991-6bf5-4165-bfbd-2f417fcf1bd0"),
                            LastName = "Westwater",
                            MaxWeeklyHours = 40,
                            Pay = 16.62m,
                            Phone = "2096042736",
                            Postal = "G5Z",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("c75e302e-225c-48e0-bb22-20efb8c98c9f"),
                            Address = "78 Northfield Pass",
                            FirstName = "Miran",
                            JobTitleId = new Guid("14481991-6bf5-4165-bfbd-2f417fcf1bd0"),
                            LastName = "MacGauhy",
                            MaxWeeklyHours = 7,
                            Pay = 17.15m,
                            Phone = "2599076601",
                            Postal = "S3N",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("541d5cd9-409f-4b1c-ac90-0e027b7b4d2d"),
                            Address = "5 Longview Road",
                            FirstName = "Olympe",
                            JobTitleId = new Guid("40855ddf-fe2c-44b0-99d4-2f35bf22129e"),
                            LastName = "Roseman",
                            MaxWeeklyHours = 33,
                            Pay = 14.32m,
                            Phone = "6834047543",
                            Postal = "J2K",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("af2fe745-375b-44b1-87f4-8a7cbe146095"),
                            Address = "452 Eastlawn Street",
                            FirstName = "Michell",
                            JobTitleId = new Guid("40855ddf-fe2c-44b0-99d4-2f35bf22129e"),
                            LastName = "McClunaghan",
                            MaxWeeklyHours = 40,
                            Pay = 19.96m,
                            Phone = "9705140405",
                            Postal = "J6A",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("6fbcf408-77a4-44f0-9df5-ef77eaf6a2ff"),
                            Address = "450 Fallview Park",
                            FirstName = "Bridget",
                            JobTitleId = new Guid("40855ddf-fe2c-44b0-99d4-2f35bf22129e"),
                            LastName = "Neathway",
                            MaxWeeklyHours = 15,
                            Pay = 16.14m,
                            Phone = "9741409393",
                            Postal = "J3V",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("ec8bf7a4-894b-44f2-9db9-8a258c7009f4"),
                            Address = "899 Namekagon Point",
                            FirstName = "Tannie",
                            JobTitleId = new Guid("40855ddf-fe2c-44b0-99d4-2f35bf22129e"),
                            LastName = "Chantillon",
                            MaxWeeklyHours = 40,
                            Pay = 18.4m,
                            Phone = "7796457229",
                            Postal = "G5N",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("24741ed0-30ea-4af1-8ef2-e75cd49a28d8"),
                            Address = "13671 Anzinger Hill",
                            FirstName = "Elvis",
                            JobTitleId = new Guid("842372b9-ba3e-4cbc-b37d-0b66299b4b65"),
                            LastName = "Birchenhead",
                            MaxWeeklyHours = 40,
                            Pay = 14.97m,
                            Phone = "4464829827",
                            Postal = "J0S",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("8c734014-a32a-4e76-ad80-03f82887eeb8"),
                            Address = "33 Dunning Plaza",
                            FirstName = "Myra",
                            JobTitleId = new Guid("842372b9-ba3e-4cbc-b37d-0b66299b4b65"),
                            LastName = "Dewane",
                            MaxWeeklyHours = 40,
                            Pay = 19.18m,
                            Phone = "3184014459",
                            Postal = "G9H",
                            Province = "Québec",
                            Role = "FT"
                        });
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("PersonScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("ScheduleRules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleRuleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ScheduleRuleId");

                    b.ToTable("ScheduleRuleEmpLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsEmployeeApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEmployerApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("NewPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("NewPersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ShiftChanges");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("SickCalls");
                });

            modelBuilder.Entity("Capstone.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b"),
                            Name = "My Store"
                        });
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreHourLineItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2349410e-0e63-4cc0-bc26-46bdc446bf3f"),
                            DayId = new Guid("ed405119-0d1a-4442-aef3-60a51a5ec5b4"),
                            StoreId = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b")
                        },
                        new
                        {
                            Id = new Guid("7c6556ce-41e8-411b-9e1d-6c985d5c0dca"),
                            DayId = new Guid("30e3944e-803b-4ce6-aee6-dd0cb60dc479"),
                            StoreId = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b")
                        },
                        new
                        {
                            Id = new Guid("06a01eb7-0d3a-4347-bcdf-a4c7180c472d"),
                            DayId = new Guid("ada842b0-757d-4118-a84a-c6d296f4d10d"),
                            StoreId = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b")
                        },
                        new
                        {
                            Id = new Guid("45e4bfa1-d1fc-4136-a042-aebe1e0f4822"),
                            DayId = new Guid("38e83d67-e75f-48d1-91e0-93f8c877480f"),
                            StoreId = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b")
                        },
                        new
                        {
                            Id = new Guid("1c0dbca9-bf1a-4830-a157-fa641150c286"),
                            DayId = new Guid("3cbff644-7d0a-49aa-9431-e69a18963449"),
                            StoreId = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b")
                        },
                        new
                        {
                            Id = new Guid("f55f053c-76e6-4614-bac6-3e7e1d2c587c"),
                            DayId = new Guid("b8655ac8-dc4f-4da2-b192-0b5fd473d4f4"),
                            StoreId = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b")
                        },
                        new
                        {
                            Id = new Guid("8dbdc152-da1c-452f-b4db-95a803c37900"),
                            DayId = new Guid("b3302c3b-f1df-4097-a1ca-fb3e67e0e972"),
                            StoreId = new Guid("3a32efb3-1916-465c-8910-b08382c3b31b")
                        });
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("TimeOffs");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayLineItemId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TimeOffId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayLineItemId");

                    b.HasIndex("TimeOffId");

                    b.ToTable("TimeOffLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId");

                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Availability");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Capstone.Models.ScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Person");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.HasOne("Capstone.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Day");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.HasOne("Capstone.Models.ScheduleRule", "ScheduleRule")
                        .WithMany()
                        .HasForeignKey("ScheduleRuleId");

                    b.Navigation("JobTitle");

                    b.Navigation("ScheduleRule");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.HasOne("Capstone.Models.Person", "NewPerson")
                        .WithMany()
                        .HasForeignKey("NewPersonId");

                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("NewPerson");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Capstone.Models.Store", "Store")
                        .WithMany("StoreHours")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Day");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "DayLineItem")
                        .WithMany()
                        .HasForeignKey("DayLineItemId");

                    b.HasOne("Capstone.Models.TimeOff", "TimeOff")
                        .WithMany()
                        .HasForeignKey("TimeOffId");

                    b.Navigation("DayLineItem");

                    b.Navigation("TimeOff");
                });

            modelBuilder.Entity("Capstone.Models.Store", b =>
                {
                    b.Navigation("StoreHours");
                });
#pragma warning restore 612, 618
        }
    }
}

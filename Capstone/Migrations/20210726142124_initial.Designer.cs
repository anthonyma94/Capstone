// <auto-generated />
using System;
using Capstone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capstone.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210726142124_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AvailabilityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("DayId");

                    b.ToTable("AvailabilityLineItems");
                });

            modelBuilder.Entity("Capstone.Models.DayLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("DayLineItems");
                });

            modelBuilder.Entity("Capstone.Models.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxWeeklyHours")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Pay")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55d3ac1b-0489-4d48-b7d8-f64ebc35dba9"),
                            Address = "8889 Milwaukee Way",
                            FirstName = "Brynna",
                            LastName = "Celloni",
                            MaxWeeklyHours = 40,
                            Pay = 14.05m,
                            Phone = "7981594155",
                            Postal = "G6B",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("243c4bcc-56a6-469f-bb48-1dc7a70c1181"),
                            Address = "8262 Coleman Alley",
                            FirstName = "Cobb",
                            LastName = "Dudden",
                            MaxWeeklyHours = 12,
                            Pay = 18.88m,
                            Phone = "4312540837",
                            Postal = "J3Y",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("cbf7b071-87ef-47b9-adf7-808232b07f8f"),
                            Address = "22011 Mosinee Parkway",
                            FirstName = "Mick",
                            LastName = "Neiland",
                            MaxWeeklyHours = 7,
                            Pay = 19.27m,
                            Phone = "5866251552",
                            Postal = "T9H",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("a5488e46-cfac-4d27-b395-590394ad0995"),
                            Address = "71524 Reindahl Drive",
                            FirstName = "Renaud",
                            LastName = "Trott",
                            MaxWeeklyHours = 16,
                            Pay = 16.65m,
                            Phone = "4111346039",
                            Postal = "J8Y",
                            Province = "Ontario",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("f3e069af-0177-4e36-a52d-b9454ffd0e99"),
                            Address = "9 Dahle Circle",
                            FirstName = "Sophie",
                            LastName = "Heller",
                            MaxWeeklyHours = 9,
                            Pay = 14.29m,
                            Phone = "9497542437",
                            Postal = "T5G",
                            Province = "Manitoba",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("e684c3a6-7eb1-4a27-8446-23870b4d3dba"),
                            Address = "146 Burrows Trail",
                            FirstName = "Dael",
                            LastName = "Haruard",
                            MaxWeeklyHours = 32,
                            Pay = 16.98m,
                            Phone = "3214306584",
                            Postal = "J0R",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("7b232974-27df-4ecb-a7e7-239cff4925d6"),
                            Address = "1579 Nancy Crossing",
                            FirstName = "Engelbert",
                            LastName = "Everal",
                            MaxWeeklyHours = 40,
                            Pay = 15.34m,
                            Phone = "5371747772",
                            Postal = "J7J",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("eda07ec8-99b1-4532-a450-1c13caa2ba73"),
                            Address = "70226 Evergreen Center",
                            FirstName = "Bradley",
                            LastName = "MacFie",
                            MaxWeeklyHours = 40,
                            Pay = 19.53m,
                            Phone = "7252174592",
                            Postal = "L6E",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("f7d198c4-3798-4da2-a97c-8ca003d8cd3a"),
                            Address = "872 Roxbury Lane",
                            FirstName = "Aron",
                            LastName = "Brayn",
                            MaxWeeklyHours = 32,
                            Pay = 17.55m,
                            Phone = "3576946796",
                            Postal = "L4P",
                            Province = "Ontario",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("68eaba53-35d4-4da0-88c4-46fdd01c53ff"),
                            Address = "7944 Golf View Lane",
                            FirstName = "Brion",
                            LastName = "Quig",
                            MaxWeeklyHours = 31,
                            Pay = 14.87m,
                            Phone = "1361511879",
                            Postal = "N3E",
                            Province = "Manitoba",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("91b94ec4-e244-45bd-a847-bb469fd750e2"),
                            Address = "86479 Harbort Center",
                            FirstName = "Christel",
                            LastName = "Jobbing",
                            MaxWeeklyHours = 40,
                            Pay = 16.96m,
                            Phone = "7512327796",
                            Postal = "L2V",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("b68576a8-cd0a-4d58-b82b-70b2aae9555b"),
                            Address = "04662 Porter Lane",
                            FirstName = "Kai",
                            LastName = "Michelin",
                            MaxWeeklyHours = 40,
                            Pay = 14.58m,
                            Phone = "7086531921",
                            Postal = "L9Y",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("949499ee-ba27-440b-8aa5-41c3522e20e2"),
                            Address = "461 Mccormick Place",
                            FirstName = "Rubin",
                            LastName = "Westwater",
                            MaxWeeklyHours = 40,
                            Pay = 16.62m,
                            Phone = "2096042736",
                            Postal = "G5Z",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("9d64f9b9-1df2-461f-9e8a-1d4d53432560"),
                            Address = "78 Northfield Pass",
                            FirstName = "Miran",
                            LastName = "MacGauhy",
                            MaxWeeklyHours = 7,
                            Pay = 17.15m,
                            Phone = "2599076601",
                            Postal = "S3N",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("b140daf2-edae-44ae-9414-30f162dcb58a"),
                            Address = "5 Longview Road",
                            FirstName = "Olympe",
                            LastName = "Roseman",
                            MaxWeeklyHours = 33,
                            Pay = 14.32m,
                            Phone = "6834047543",
                            Postal = "J2K",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("b104b2aa-56f6-44fb-bba9-159a74aabec6"),
                            Address = "452 Eastlawn Street",
                            FirstName = "Michell",
                            LastName = "McClunaghan",
                            MaxWeeklyHours = 40,
                            Pay = 19.96m,
                            Phone = "9705140405",
                            Postal = "J6A",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("80cf5eab-7936-4cb4-b512-663e00459c92"),
                            Address = "450 Fallview Park",
                            FirstName = "Bridget",
                            LastName = "Neathway",
                            MaxWeeklyHours = 15,
                            Pay = 16.14m,
                            Phone = "9741409393",
                            Postal = "J3V",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("053572ef-9506-42be-9f81-c90e251b1c6c"),
                            Address = "899 Namekagon Point",
                            FirstName = "Tannie",
                            LastName = "Chantillon",
                            MaxWeeklyHours = 40,
                            Pay = 18.4m,
                            Phone = "7796457229",
                            Postal = "G5N",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("bc6eadb8-4df5-4118-b813-eaba519f8873"),
                            Address = "13671 Anzinger Hill",
                            FirstName = "Elvis",
                            LastName = "Birchenhead",
                            MaxWeeklyHours = 40,
                            Pay = 14.97m,
                            Phone = "4464829827",
                            Postal = "J0S",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("3d498699-5170-4324-a682-c67b37f6fce0"),
                            Address = "33 Dunning Plaza",
                            FirstName = "Myra",
                            LastName = "Dewane",
                            MaxWeeklyHours = 40,
                            Pay = 19.18m,
                            Phone = "3184014459",
                            Postal = "G9H",
                            Province = "Québec",
                            Role = "FT"
                        });
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("PersonScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("ScheduleRules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleRuleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ScheduleRuleId");

                    b.ToTable("ScheduleRuleEmpLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsEmployeeApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEmployerApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("NewPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("NewPersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ShiftChanges");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("SickCalls");
                });

            modelBuilder.Entity("Capstone.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Capstone.Models.StoreHour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreHours");
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StoreHourId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("StoreHourId");

                    b.ToTable("StoreHourLineItems");
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("TimeOffs");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayLineItemId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TimeOffId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayLineItemId");

                    b.HasIndex("TimeOffId");

                    b.ToTable("TimeOffLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId");

                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Availability");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Capstone.Models.ScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Person");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.HasOne("Capstone.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Day");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.HasOne("Capstone.Models.ScheduleRule", "ScheduleRule")
                        .WithMany()
                        .HasForeignKey("ScheduleRuleId");

                    b.Navigation("JobTitle");

                    b.Navigation("ScheduleRule");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.HasOne("Capstone.Models.Person", "NewPerson")
                        .WithMany()
                        .HasForeignKey("NewPersonId");

                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("NewPerson");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.StoreHour", b =>
                {
                    b.HasOne("Capstone.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.HasOne("Capstone.Models.StoreHour", "StoreHour")
                        .WithMany()
                        .HasForeignKey("StoreHourId");

                    b.Navigation("Day");

                    b.Navigation("StoreHour");
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "DayLineItem")
                        .WithMany()
                        .HasForeignKey("DayLineItemId");

                    b.HasOne("Capstone.Models.TimeOff", "TimeOff")
                        .WithMany()
                        .HasForeignKey("TimeOffId");

                    b.Navigation("DayLineItem");

                    b.Navigation("TimeOff");
                });
#pragma warning restore 612, 618
        }
    }
}

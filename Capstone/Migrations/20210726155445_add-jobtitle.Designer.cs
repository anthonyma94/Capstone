// <auto-generated />
using System;
using Capstone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capstone.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210726155445_add-jobtitle")]
    partial class addjobtitle
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AvailabilityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("DayId");

                    b.ToTable("AvailabilityLineItems");
                });

            modelBuilder.Entity("Capstone.Models.DayLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("DayLineItems");
                });

            modelBuilder.Entity("Capstone.Models.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b7dc549-d2ec-4b96-be4d-db7d556597b7"),
                            Name = "Stock"
                        },
                        new
                        {
                            Id = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            Name = "Sales"
                        },
                        new
                        {
                            Id = new Guid("f326dbf1-ea74-40b5-91f6-cbc742e3d294"),
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = new Guid("a14cebc4-d139-4aff-aa00-dafa650db24c"),
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxWeeklyHours")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Pay")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eed7b862-526a-4755-853d-b8cd5b90dd19"),
                            Address = "8889 Milwaukee Way",
                            FirstName = "Brynna",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Celloni",
                            MaxWeeklyHours = 40,
                            Pay = 14.05m,
                            Phone = "7981594155",
                            Postal = "G6B",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("dedf1fb2-e39a-4f3b-8947-b3fc437dacb1"),
                            Address = "8262 Coleman Alley",
                            FirstName = "Cobb",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Dudden",
                            MaxWeeklyHours = 12,
                            Pay = 18.88m,
                            Phone = "4312540837",
                            Postal = "J3Y",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("59fb091a-afa7-41ea-a05c-e6d904429caf"),
                            Address = "22011 Mosinee Parkway",
                            FirstName = "Mick",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Neiland",
                            MaxWeeklyHours = 7,
                            Pay = 19.27m,
                            Phone = "5866251552",
                            Postal = "T9H",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("9a72a098-112a-4865-bbac-ae1139800ae5"),
                            Address = "71524 Reindahl Drive",
                            FirstName = "Renaud",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Trott",
                            MaxWeeklyHours = 16,
                            Pay = 16.65m,
                            Phone = "4111346039",
                            Postal = "J8Y",
                            Province = "Ontario",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("16f31420-3f3c-425b-8eb7-4c7940ab35df"),
                            Address = "9 Dahle Circle",
                            FirstName = "Sophie",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Heller",
                            MaxWeeklyHours = 9,
                            Pay = 14.29m,
                            Phone = "9497542437",
                            Postal = "T5G",
                            Province = "Manitoba",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("d8e42a51-69c9-4936-8e0e-8cd9b01cd6de"),
                            Address = "146 Burrows Trail",
                            FirstName = "Dael",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Haruard",
                            MaxWeeklyHours = 32,
                            Pay = 16.98m,
                            Phone = "3214306584",
                            Postal = "J0R",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("70dadb1c-ef13-4b9e-9472-12364f98177c"),
                            Address = "1579 Nancy Crossing",
                            FirstName = "Engelbert",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Everal",
                            MaxWeeklyHours = 40,
                            Pay = 15.34m,
                            Phone = "5371747772",
                            Postal = "J7J",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("88c71f3d-1996-4496-9252-aec4d7c0cd9a"),
                            Address = "70226 Evergreen Center",
                            FirstName = "Bradley",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "MacFie",
                            MaxWeeklyHours = 40,
                            Pay = 19.53m,
                            Phone = "7252174592",
                            Postal = "L6E",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("ad78c009-9c63-4d9b-9d3b-baa2a020ff35"),
                            Address = "872 Roxbury Lane",
                            FirstName = "Aron",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Brayn",
                            MaxWeeklyHours = 32,
                            Pay = 17.55m,
                            Phone = "3576946796",
                            Postal = "L4P",
                            Province = "Ontario",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("12e02744-4a5c-48bf-9e84-320f3f7a0ce2"),
                            Address = "7944 Golf View Lane",
                            FirstName = "Brion",
                            JobTitleId = new Guid("ba85b248-b160-494c-9027-7e3f344979a0"),
                            LastName = "Quig",
                            MaxWeeklyHours = 31,
                            Pay = 14.87m,
                            Phone = "1361511879",
                            Postal = "N3E",
                            Province = "Manitoba",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("f17d73a7-fdc7-4393-a85b-efd629ceae28"),
                            Address = "86479 Harbort Center",
                            FirstName = "Christel",
                            JobTitleId = new Guid("3b7dc549-d2ec-4b96-be4d-db7d556597b7"),
                            LastName = "Jobbing",
                            MaxWeeklyHours = 40,
                            Pay = 16.96m,
                            Phone = "7512327796",
                            Postal = "L2V",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("3a8bd469-bcfc-40da-b77c-4495020f3133"),
                            Address = "04662 Porter Lane",
                            FirstName = "Kai",
                            JobTitleId = new Guid("3b7dc549-d2ec-4b96-be4d-db7d556597b7"),
                            LastName = "Michelin",
                            MaxWeeklyHours = 40,
                            Pay = 14.58m,
                            Phone = "7086531921",
                            Postal = "L9Y",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("1f45830c-5614-4ae6-af08-bd87b583fec1"),
                            Address = "461 Mccormick Place",
                            FirstName = "Rubin",
                            JobTitleId = new Guid("3b7dc549-d2ec-4b96-be4d-db7d556597b7"),
                            LastName = "Westwater",
                            MaxWeeklyHours = 40,
                            Pay = 16.62m,
                            Phone = "2096042736",
                            Postal = "G5Z",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("7658583f-5fb8-4446-806e-b46efd3a81b2"),
                            Address = "78 Northfield Pass",
                            FirstName = "Miran",
                            JobTitleId = new Guid("3b7dc549-d2ec-4b96-be4d-db7d556597b7"),
                            LastName = "MacGauhy",
                            MaxWeeklyHours = 7,
                            Pay = 17.15m,
                            Phone = "2599076601",
                            Postal = "S3N",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("76ca8b9b-36f4-4322-a98d-7affcbeb14fc"),
                            Address = "5 Longview Road",
                            FirstName = "Olympe",
                            JobTitleId = new Guid("f326dbf1-ea74-40b5-91f6-cbc742e3d294"),
                            LastName = "Roseman",
                            MaxWeeklyHours = 33,
                            Pay = 14.32m,
                            Phone = "6834047543",
                            Postal = "J2K",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("81456073-2e14-4969-9737-90271d3f8c75"),
                            Address = "452 Eastlawn Street",
                            FirstName = "Michell",
                            JobTitleId = new Guid("f326dbf1-ea74-40b5-91f6-cbc742e3d294"),
                            LastName = "McClunaghan",
                            MaxWeeklyHours = 40,
                            Pay = 19.96m,
                            Phone = "9705140405",
                            Postal = "J6A",
                            Province = "Ontario",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("91781cb8-8e57-429b-afa0-bbf2a50ab17d"),
                            Address = "450 Fallview Park",
                            FirstName = "Bridget",
                            JobTitleId = new Guid("f326dbf1-ea74-40b5-91f6-cbc742e3d294"),
                            LastName = "Neathway",
                            MaxWeeklyHours = 15,
                            Pay = 16.14m,
                            Phone = "9741409393",
                            Postal = "J3V",
                            Province = "Québec",
                            Role = "PT"
                        },
                        new
                        {
                            Id = new Guid("0f86197d-9f64-478a-9afa-7b9ab7efe45b"),
                            Address = "899 Namekagon Point",
                            FirstName = "Tannie",
                            JobTitleId = new Guid("f326dbf1-ea74-40b5-91f6-cbc742e3d294"),
                            LastName = "Chantillon",
                            MaxWeeklyHours = 40,
                            Pay = 18.4m,
                            Phone = "7796457229",
                            Postal = "G5N",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("df104d07-71ee-4f7e-8a44-b8e327723f28"),
                            Address = "13671 Anzinger Hill",
                            FirstName = "Elvis",
                            JobTitleId = new Guid("a14cebc4-d139-4aff-aa00-dafa650db24c"),
                            LastName = "Birchenhead",
                            MaxWeeklyHours = 40,
                            Pay = 14.97m,
                            Phone = "4464829827",
                            Postal = "J0S",
                            Province = "Québec",
                            Role = "FT"
                        },
                        new
                        {
                            Id = new Guid("8ca86232-1534-4d8c-871c-872d4a19d551"),
                            Address = "33 Dunning Plaza",
                            FirstName = "Myra",
                            JobTitleId = new Guid("a14cebc4-d139-4aff-aa00-dafa650db24c"),
                            LastName = "Dewane",
                            MaxWeeklyHours = 40,
                            Pay = 19.18m,
                            Phone = "3184014459",
                            Postal = "G9H",
                            Province = "Québec",
                            Role = "FT"
                        });
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("PersonScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("ScheduleRules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleRuleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ScheduleRuleId");

                    b.ToTable("ScheduleRuleEmpLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsEmployeeApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEmployerApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("NewPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("NewPersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ShiftChanges");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("SickCalls");
                });

            modelBuilder.Entity("Capstone.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Capstone.Models.StoreHour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreHours");
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StoreHourId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("StoreHourId");

                    b.ToTable("StoreHourLineItems");
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("TimeOffs");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayLineItemId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TimeOffId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayLineItemId");

                    b.HasIndex("TimeOffId");

                    b.ToTable("TimeOffLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId");

                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Availability");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Capstone.Models.ScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Person");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.HasOne("Capstone.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Day");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.HasOne("Capstone.Models.ScheduleRule", "ScheduleRule")
                        .WithMany()
                        .HasForeignKey("ScheduleRuleId");

                    b.Navigation("JobTitle");

                    b.Navigation("ScheduleRule");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.HasOne("Capstone.Models.Person", "NewPerson")
                        .WithMany()
                        .HasForeignKey("NewPersonId");

                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("NewPerson");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.StoreHour", b =>
                {
                    b.HasOne("Capstone.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.HasOne("Capstone.Models.StoreHour", "StoreHour")
                        .WithMany()
                        .HasForeignKey("StoreHourId");

                    b.Navigation("Day");

                    b.Navigation("StoreHour");
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "DayLineItem")
                        .WithMany()
                        .HasForeignKey("DayLineItemId");

                    b.HasOne("Capstone.Models.TimeOff", "TimeOff")
                        .WithMany()
                        .HasForeignKey("TimeOffId");

                    b.Navigation("DayLineItem");

                    b.Navigation("TimeOff");
                });
#pragma warning restore 612, 618
        }
    }
}

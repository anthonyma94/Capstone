// <auto-generated />
using System;
using Capstone.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capstone.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AvailabilityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("AvailabilityId");

                    b.HasIndex("DayId");

                    b.ToTable("AvailabilityLineItems");
                });

            modelBuilder.Entity("Capstone.Models.DayLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("DayLineItems");
                });

            modelBuilder.Entity("Capstone.Models.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxWeeklyHours")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Pay")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("PersonScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("ScheduleRules");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid?>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleRuleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ScheduleRuleId");

                    b.ToTable("ScheduleRuleEmpLineItems");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsEmployeeApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEmployerApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("NewPersonId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("NewPersonId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ShiftChanges");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("SickCalls");
                });

            modelBuilder.Entity("Capstone.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Capstone.Models.StoreHour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreHours");
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StoreHourId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("StoreHourId");

                    b.ToTable("StoreHourLineItems");
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("TimeOffs");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("DayLineItemId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TimeOffId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DayLineItemId");

                    b.HasIndex("TimeOffId");

                    b.ToTable("TimeOffLineItems");
                });

            modelBuilder.Entity("Capstone.Models.Availability", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.AvailabilityLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Availability", "Availability")
                        .WithMany()
                        .HasForeignKey("AvailabilityId");

                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Availability");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.Person", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("Capstone.Models.PersonScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Capstone.Models.ScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Person");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.HasOne("Capstone.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Day");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRule", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("Capstone.Models.ScheduleRuleEmpLineItem", b =>
                {
                    b.HasOne("Capstone.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId");

                    b.HasOne("Capstone.Models.ScheduleRule", "ScheduleRule")
                        .WithMany()
                        .HasForeignKey("ScheduleRuleId");

                    b.Navigation("JobTitle");

                    b.Navigation("ScheduleRule");
                });

            modelBuilder.Entity("Capstone.Models.ShiftChange", b =>
                {
                    b.HasOne("Capstone.Models.Person", "NewPerson")
                        .WithMany()
                        .HasForeignKey("NewPersonId");

                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("NewPerson");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.SickCall", b =>
                {
                    b.HasOne("Capstone.Models.PersonScheduleLineItem", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Capstone.Models.StoreHour", b =>
                {
                    b.HasOne("Capstone.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Capstone.Models.StoreHourLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");

                    b.HasOne("Capstone.Models.StoreHour", "StoreHour")
                        .WithMany()
                        .HasForeignKey("StoreHourId");

                    b.Navigation("Day");

                    b.Navigation("StoreHour");
                });

            modelBuilder.Entity("Capstone.Models.TimeOff", b =>
                {
                    b.HasOne("Capstone.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Capstone.Models.TimeOffLineItem", b =>
                {
                    b.HasOne("Capstone.Models.DayLineItem", "DayLineItem")
                        .WithMany()
                        .HasForeignKey("DayLineItemId");

                    b.HasOne("Capstone.Models.TimeOff", "TimeOff")
                        .WithMany()
                        .HasForeignKey("TimeOffId");

                    b.Navigation("DayLineItem");

                    b.Navigation("TimeOff");
                });
#pragma warning restore 612, 618
        }
    }
}
